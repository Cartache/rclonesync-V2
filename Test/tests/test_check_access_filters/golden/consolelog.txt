
:MSG:  EXCLUDE OTHER TESTS


:MSG:  Another --first-sync to get the ExcludeOther_filtersfile.txt.MD5 built.

../rclonesync.py ./testdir/path1/ ./testdir/path2/ --first-sync --filters-file ./tests/test_check_access_filters/ExcludeOther_filtersfile.txt --verbose --workdir ./testwd/ --no-datetime-log --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V2.11 200813) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=False, check_filename=RCLONE_TEST, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./tests/test_check_access_filters/ExcludeOther_filtersfile.txt, first_sync=True, force=False, keep_chkfiles=False, max_deletes=50, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
Using filters-file  <./tests/test_check_access_filters/ExcludeOther_filtersfile.txt>
Storing filters-file hash to <./tests/test_check_access_filters/ExcludeOther_filtersfile.txt-MD5>
>>>>> --first-sync copying any unique Path2 files to Path1
>>>>> Path1 Checking for Diffs
>>>>> Path2 Checking for Diffs
>>>>> No changes on Path2 - Skipping ahead
>>>>> Synching Path1 to Path2
>>>>> Refreshing Path1 and Path2 lsl files
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.


:MSG:  EXCLUDE - Test Include/Exclude filters for Check Access

../rclonesync.py ./testdir/path1/ ./testdir/path2/ --check-access --verbose --filters-file ./tests/test_check_access_filters/ExcludeOther_filtersfile.txt --keep-chkfiles --verbose --workdir ./testwd/ --no-datetime-log --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V2.11 200813) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=True, check_filename=RCLONE_TEST, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./tests/test_check_access_filters/ExcludeOther_filtersfile.txt, first_sync=False, force=False, keep_chkfiles=True, max_deletes=50, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=2, workdir=./testwd/>
Using filters-file  <./tests/test_check_access_filters/ExcludeOther_filtersfile.txt>
>>>>> Checking Path1 and Path2 rclone filesystems access health
    rclone command:  ['rclone', 'lsl', './testdir/path1/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter', '- /subdir/subdirA/', '--filter', '+ /subdir/**RCLONE_TEST', '--filter', '- /subdir-not/', '--filter', '+ /*RCLONE_TEST', '--filter', '- rclonesync/Test/', '--filter', '- **']
    rclone command:  ['rclone', 'lsl', './testdir/path2/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter', '- /subdir/subdirA/', '--filter', '+ /subdir/**RCLONE_TEST', '--filter', '- /subdir-not/', '--filter', '+ /*RCLONE_TEST', '--filter', '- rclonesync/Test/', '--filter', '- **']
    rclone command:  ['rclone', 'lsl', './testdir/path1/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter-from', './tests/test_check_access_filters/ExcludeOther_filtersfile.txt']
    rclone command:  ['rclone', 'lsl', './testdir/path2/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter-from', './tests/test_check_access_filters/ExcludeOther_filtersfile.txt']
>>>>> Path1 Checking for Diffs
>>>>> Path2 Checking for Diffs
>>>>> No changes on Path2 - Skipping ahead
>>>>> No changes on Path1 or Path2 - Skipping sync from Path1 to Path2
>>>>> Refreshing Path1 and Path2 lsl files
    rclone command:  ['rclone', 'lsl', './testdir/path1/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter-from', './tests/test_check_access_filters/ExcludeOther_filtersfile.txt']
    rclone command:  ['rclone', 'lsl', './testdir/path2/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter-from', './tests/test_check_access_filters/ExcludeOther_filtersfile.txt']
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.


:SAVELSL: Exclude_Initial


:MSG:  EXCLUDE - Delete RCLONE_TEST files in excluded directories

rclone delete ./testdir/path2/subdir/subdirA/RCLONE_TEST
rclone delete ./testdir/path1/subdir-not/RCLONE_TEST
rclone delete ./testdir/path2/subdir-not/subdir-not2/RCLONE_TEST
rclone delete ./testdir/path1/subdirX/RCLONE_TEST

:MSG:  EXCLUDE - Test Should PASS

../rclonesync.py ./testdir/path1/ ./testdir/path2/ --check-access --verbose --filters-file ./tests/test_check_access_filters/ExcludeOther_filtersfile.txt --keep-chkfiles --verbose --workdir ./testwd/ --no-datetime-log --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V2.11 200813) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=True, check_filename=RCLONE_TEST, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./tests/test_check_access_filters/ExcludeOther_filtersfile.txt, first_sync=False, force=False, keep_chkfiles=True, max_deletes=50, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=2, workdir=./testwd/>
Using filters-file  <./tests/test_check_access_filters/ExcludeOther_filtersfile.txt>
>>>>> Checking Path1 and Path2 rclone filesystems access health
    rclone command:  ['rclone', 'lsl', './testdir/path1/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter', '- /subdir/subdirA/', '--filter', '+ /subdir/**RCLONE_TEST', '--filter', '- /subdir-not/', '--filter', '+ /*RCLONE_TEST', '--filter', '- rclonesync/Test/', '--filter', '- **']
    rclone command:  ['rclone', 'lsl', './testdir/path2/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter', '- /subdir/subdirA/', '--filter', '+ /subdir/**RCLONE_TEST', '--filter', '- /subdir-not/', '--filter', '+ /*RCLONE_TEST', '--filter', '- rclonesync/Test/', '--filter', '- **']
    rclone command:  ['rclone', 'lsl', './testdir/path1/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter-from', './tests/test_check_access_filters/ExcludeOther_filtersfile.txt']
    rclone command:  ['rclone', 'lsl', './testdir/path2/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter-from', './tests/test_check_access_filters/ExcludeOther_filtersfile.txt']
>>>>> Path1 Checking for Diffs
>>>>> Path2 Checking for Diffs
>>>>> No changes on Path2 - Skipping ahead
>>>>> No changes on Path1 or Path2 - Skipping sync from Path1 to Path2
>>>>> Refreshing Path1 and Path2 lsl files
    rclone command:  ['rclone', 'lsl', './testdir/path1/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter-from', './tests/test_check_access_filters/ExcludeOther_filtersfile.txt']
    rclone command:  ['rclone', 'lsl', './testdir/path2/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter-from', './tests/test_check_access_filters/ExcludeOther_filtersfile.txt']
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.


:SAVELSL: Exclude_PassRun


:MSG:  EXCLUDE - Delete RCLONE_TEST files in included directories

rclone delete ./testdir/path2/RCLONE_TEST
rclone delete ./testdir/path1/subdir/RCLONE_TEST

:MSG:  EXCLUDE - Test Should CRITICAL ERROR

../rclonesync.py ./testdir/path1/ ./testdir/path2/ --check-access --verbose --filters-file ./tests/test_check_access_filters/ExcludeOther_filtersfile.txt --keep-chkfiles --verbose --workdir ./testwd/ --no-datetime-log --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V2.11 200813) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=True, check_filename=RCLONE_TEST, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./tests/test_check_access_filters/ExcludeOther_filtersfile.txt, first_sync=False, force=False, keep_chkfiles=True, max_deletes=50, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=2, workdir=./testwd/>
Using filters-file  <./tests/test_check_access_filters/ExcludeOther_filtersfile.txt>
>>>>> Checking Path1 and Path2 rclone filesystems access health
    rclone command:  ['rclone', 'lsl', './testdir/path1/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter', '- /subdir/subdirA/', '--filter', '+ /subdir/**RCLONE_TEST', '--filter', '- /subdir-not/', '--filter', '+ /*RCLONE_TEST', '--filter', '- rclonesync/Test/', '--filter', '- **']
    rclone command:  ['rclone', 'lsl', './testdir/path2/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter', '- /subdir/subdirA/', '--filter', '+ /subdir/**RCLONE_TEST', '--filter', '- /subdir-not/', '--filter', '+ /*RCLONE_TEST', '--filter', '- rclonesync/Test/', '--filter', '- **']
  ERROR    Failed access health test:  Path1 key <RCLONE_TEST> not found in Path2 - 
  ERROR    Failed access health test:  Path2 key <subdir/RCLONE_TEST> not found in Path1 - 
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
***** Critical Error Abort - Must run --first-sync to recover.  See README.md *****


:SAVELSL: Exclude_ErrorRun

rm ./testwd/LSL_._testdir_path1_._testdir_path2__Path1_CHK ./testwd/LSL_._testdir_path1_._testdir_path2__Path1_ERROR ./testwd/LSL_._testdir_path1_._testdir_path2__Path2_CHK ./testwd/LSL_._testdir_path1_._testdir_path2__Path2_ERROR

:MSG:  INCLUDE OTHER TESTS


:MSG:  Reset to the initial state

rclone copy ./tests/test_check_access_filters/initial ./testdir/path1/
rclone sync ./testdir/path1/ ./testdir/path2/
../rclonesync.py ./testdir/path1/ ./testdir/path2/ --first-sync --filters-file ./tests/test_check_access_filters/IncludeOther_filtersfile.txt --verbose --workdir ./testwd/ --no-datetime-log --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V2.11 200813) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=False, check_filename=RCLONE_TEST, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./tests/test_check_access_filters/IncludeOther_filtersfile.txt, first_sync=True, force=False, keep_chkfiles=False, max_deletes=50, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
Using filters-file  <./tests/test_check_access_filters/IncludeOther_filtersfile.txt>
Storing filters-file hash to <./tests/test_check_access_filters/IncludeOther_filtersfile.txt-MD5>
>>>>> --first-sync copying any unique Path2 files to Path1
>>>>> Path1 Checking for Diffs
>>>>> Path2 Checking for Diffs
>>>>> No changes on Path2 - Skipping ahead
>>>>> Synching Path1 to Path2
>>>>> Refreshing Path1 and Path2 lsl files
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.


:MSG:  INCLUDE - Test Include/Exclude filters for Check Access

../rclonesync.py ./testdir/path1/ ./testdir/path2/ --check-access --verbose --filters-file ./tests/test_check_access_filters/IncludeOther_filtersfile.txt --keep-chkfiles --verbose --workdir ./testwd/ --no-datetime-log --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V2.11 200813) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=True, check_filename=RCLONE_TEST, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./tests/test_check_access_filters/IncludeOther_filtersfile.txt, first_sync=False, force=False, keep_chkfiles=True, max_deletes=50, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=2, workdir=./testwd/>
Using filters-file  <./tests/test_check_access_filters/IncludeOther_filtersfile.txt>
>>>>> Checking Path1 and Path2 rclone filesystems access health
    rclone command:  ['rclone', 'lsl', './testdir/path1/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter', '- /subdir/subdirA/', '--filter', '- /subdir-not/', '--filter', '- rclonesync/Test/', '--filter', '+ RCLONE_TEST', '--filter', '- **']
    rclone command:  ['rclone', 'lsl', './testdir/path2/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter', '- /subdir/subdirA/', '--filter', '- /subdir-not/', '--filter', '- rclonesync/Test/', '--filter', '+ RCLONE_TEST', '--filter', '- **']
    rclone command:  ['rclone', 'lsl', './testdir/path1/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter-from', './tests/test_check_access_filters/IncludeOther_filtersfile.txt']
    rclone command:  ['rclone', 'lsl', './testdir/path2/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter-from', './tests/test_check_access_filters/IncludeOther_filtersfile.txt']
>>>>> Path1 Checking for Diffs
>>>>> Path2 Checking for Diffs
>>>>> No changes on Path2 - Skipping ahead
>>>>> No changes on Path1 or Path2 - Skipping sync from Path1 to Path2
>>>>> Refreshing Path1 and Path2 lsl files
    rclone command:  ['rclone', 'lsl', './testdir/path1/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter-from', './tests/test_check_access_filters/IncludeOther_filtersfile.txt']
    rclone command:  ['rclone', 'lsl', './testdir/path2/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter-from', './tests/test_check_access_filters/IncludeOther_filtersfile.txt']
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.


:SAVELSL: Include_Initial


:MSG:  INCLUDE - Delete RCLONE_TEST files in excluded directories

rclone delete ./testdir/path2/subdir/subdirA/RCLONE_TEST
rclone delete ./testdir/path1/subdir-not/RCLONE_TEST
rclone delete ./testdir/path2/subdir-not/subdir-not2/RCLONE_TEST

:MSG:  INCLUDE - Test Should PASS

../rclonesync.py ./testdir/path1/ ./testdir/path2/ --check-access --verbose --filters-file ./tests/test_check_access_filters/IncludeOther_filtersfile.txt --keep-chkfiles --verbose --workdir ./testwd/ --no-datetime-log --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V2.11 200813) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=True, check_filename=RCLONE_TEST, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./tests/test_check_access_filters/IncludeOther_filtersfile.txt, first_sync=False, force=False, keep_chkfiles=True, max_deletes=50, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=2, workdir=./testwd/>
Using filters-file  <./tests/test_check_access_filters/IncludeOther_filtersfile.txt>
>>>>> Checking Path1 and Path2 rclone filesystems access health
    rclone command:  ['rclone', 'lsl', './testdir/path1/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter', '- /subdir/subdirA/', '--filter', '- /subdir-not/', '--filter', '- rclonesync/Test/', '--filter', '+ RCLONE_TEST', '--filter', '- **']
    rclone command:  ['rclone', 'lsl', './testdir/path2/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter', '- /subdir/subdirA/', '--filter', '- /subdir-not/', '--filter', '- rclonesync/Test/', '--filter', '+ RCLONE_TEST', '--filter', '- **']
    rclone command:  ['rclone', 'lsl', './testdir/path1/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter-from', './tests/test_check_access_filters/IncludeOther_filtersfile.txt']
    rclone command:  ['rclone', 'lsl', './testdir/path2/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter-from', './tests/test_check_access_filters/IncludeOther_filtersfile.txt']
>>>>> Path1 Checking for Diffs
>>>>> Path2 Checking for Diffs
>>>>> No changes on Path2 - Skipping ahead
>>>>> No changes on Path1 or Path2 - Skipping sync from Path1 to Path2
>>>>> Refreshing Path1 and Path2 lsl files
    rclone command:  ['rclone', 'lsl', './testdir/path1/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter-from', './tests/test_check_access_filters/IncludeOther_filtersfile.txt']
    rclone command:  ['rclone', 'lsl', './testdir/path2/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter-from', './tests/test_check_access_filters/IncludeOther_filtersfile.txt']
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.


:SAVELSL: Include_PassRun


:MSG:  INCLUDE - Delete RCLONE_TEST files in included directories

rclone delete ./testdir/path2/RCLONE_TEST
rclone delete ./testdir/path1/subdir/RCLONE_TEST
rclone delete ./testdir/path1/subdirX/subdirX1/RCLONE_TEST

:MSG:  INCLUDE - Test Should CRITICAL ERROR

../rclonesync.py ./testdir/path1/ ./testdir/path2/ --check-access --verbose --filters-file ./tests/test_check_access_filters/IncludeOther_filtersfile.txt --keep-chkfiles --verbose --workdir ./testwd/ --no-datetime-log --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V2.11 200813) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=True, check_filename=RCLONE_TEST, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./tests/test_check_access_filters/IncludeOther_filtersfile.txt, first_sync=False, force=False, keep_chkfiles=True, max_deletes=50, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=2, workdir=./testwd/>
Using filters-file  <./tests/test_check_access_filters/IncludeOther_filtersfile.txt>
>>>>> Checking Path1 and Path2 rclone filesystems access health
    rclone command:  ['rclone', 'lsl', './testdir/path1/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter', '- /subdir/subdirA/', '--filter', '- /subdir-not/', '--filter', '- rclonesync/Test/', '--filter', '+ RCLONE_TEST', '--filter', '- **']
    rclone command:  ['rclone', 'lsl', './testdir/path2/', '--config', '/home/cjn/.config/rclone/rclone.conf', '--filter', '- /subdir/subdirA/', '--filter', '- /subdir-not/', '--filter', '- rclonesync/Test/', '--filter', '+ RCLONE_TEST', '--filter', '- **']
  ERROR    Failed access health test:  <RCLONE_TEST> Path1 count 3, Path2 count 4 - 
  ERROR    Failed access health test:  Path1 key <RCLONE_TEST> not found in Path2 - 
  ERROR    Failed access health test:  Path2 key <subdir/RCLONE_TEST> not found in Path1 - 
  ERROR    Failed access health test:  Path2 key <subdirX/subdirX1/RCLONE_TEST> not found in Path1 - 
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
***** Critical Error Abort - Must run --first-sync to recover.  See README.md *****


:SAVELSL: Include_ErrorRun

rm ./testwd/LSL_._testdir_path1_._testdir_path2__Path1_CHK ./testwd/LSL_._testdir_path1_._testdir_path2__Path1_ERROR ./testwd/LSL_._testdir_path1_._testdir_path2__Path2_CHK ./testwd/LSL_._testdir_path1_._testdir_path2__Path2_ERROR
