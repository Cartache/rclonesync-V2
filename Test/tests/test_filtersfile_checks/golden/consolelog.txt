
:MSG:   1) Place filtersfile in WORKDIR

rclone copy ./tests/test_filtersfile_checks/filtersfile.txt ./testwd/

:MSG:	2) Run with --filters-file but with no MD5	Should abort

../rclonesync.py ./testdir/path1/ ./testdir/path2/ --filters-file ./testwd/filtersfile.txt --verbose --workdir ./testwd/ --no-datetime-log --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V2.11 200813) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=False, check_filename=RCLONE_TEST, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./testwd/filtersfile.txt, first_sync=False, force=False, keep_chkfiles=False, max_deletes=50, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
Using filters-file  <./testwd/filtersfile.txt>
MD5 file not found for filters file <./testwd/filtersfile.txt>.  Must run --first-sync.
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
***** Critical Error Abort - Must run --first-sync to recover.  See README.md *****


:MSG:	3) Run without --filters-file 				Should be blocked due to prior CRITICAL abort

../rclonesync.py ./testdir/path1/ ./testdir/path2/ --verbose --workdir ./testwd/ --no-datetime-log --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V2.11 200813) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=False, check_filename=RCLONE_TEST, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=None, first_sync=False, force=False, keep_chkfiles=False, max_deletes=50, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
***** Cannot find prior Path1 or Path2 lsl files.
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
***** Critical Error Abort - Must run --first-sync to recover.  See README.md *****


:MSG:	4) Run with --filters-file and --first-sync

../rclonesync.py ./testdir/path1/ ./testdir/path2/ --filters-file ./testwd/filtersfile.txt --first-sync --verbose --workdir ./testwd/ --no-datetime-log --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V2.11 200813) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=False, check_filename=RCLONE_TEST, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./testwd/filtersfile.txt, first_sync=True, force=False, keep_chkfiles=False, max_deletes=50, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
Using filters-file  <./testwd/filtersfile.txt>
Storing filters-file hash to <./testwd/filtersfile.txt-MD5>
>>>>> --first-sync copying any unique Path2 files to Path1
>>>>> Path1 Checking for Diffs
>>>>> Path2 Checking for Diffs
>>>>> No changes on Path2 - Skipping ahead
>>>>> Synching Path1 to Path2
>>>>> Refreshing Path1 and Path2 lsl files
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.


:MSG:	5) Run with --filters-file alone.  		Should run

../rclonesync.py ./testdir/path1/ ./testdir/path2/ --filters-file ./testwd/filtersfile.txt --verbose --workdir ./testwd/ --no-datetime-log --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V2.11 200813) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=False, check_filename=RCLONE_TEST, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./testwd/filtersfile.txt, first_sync=False, force=False, keep_chkfiles=False, max_deletes=50, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
Using filters-file  <./testwd/filtersfile.txt>
>>>>> Path1 Checking for Diffs
>>>>> Path2 Checking for Diffs
>>>>> No changes on Path2 - Skipping ahead
>>>>> No changes on Path1 or Path2 - Skipping sync from Path1 to Path2
>>>>> Refreshing Path1 and Path2 lsl files
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
>>>>> Successful run.  All done.


:MSG:	6) push changed filters-file to WORKDIR

rclone copyto ./tests/test_filtersfile_checks/filtersfile2.txt ./testwd/filtersfile.txt

:MSG:	7) Run with --filters-file alone.  		Should abort

../rclonesync.py ./testdir/path1/ ./testdir/path2/ --filters-file ./testwd/filtersfile.txt --verbose --workdir ./testwd/ --no-datetime-log --rclone rclone --config /home/cjn/.config/rclone/rclone.conf
***** BiDirectional Sync for Cloud Services using rclone (V2.11 200813) *****
Lock file created: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command args: <Path1=./testdir/path1/, Path2=./testdir/path2/, check_access=False, check_filename=RCLONE_TEST, config=/home/cjn/.config/rclone/rclone.conf, dry_run=False, filters_file=./testwd/filtersfile.txt, first_sync=False, force=False, keep_chkfiles=False, max_deletes=50, no_datetime_log=True, rc_verbose=None, rclone=rclone, rclone_args=None, remove_empty_directories=False, verbose=1, workdir=./testwd/>
Using filters-file  <./testwd/filtersfile.txt>
Filters-file <./testwd/filtersfile.txt> has chanaged (MD5 does not match).  Must run --first-sync.
Lock file removed: </tmp/rclonesync_LOCK_._testdir_path1_._testdir_path2_>
***** Critical Error Abort - Must run --first-sync to recover.  See README.md *****

